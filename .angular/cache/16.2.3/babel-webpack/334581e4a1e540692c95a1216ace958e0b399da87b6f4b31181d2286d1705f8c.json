{"ast":null,"code":"var _class;\nimport { BOOKS } from './books.data';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class BookService {\n  constructor() {\n    this.books = BOOKS;\n    this.booksSubject = new BehaviorSubject(this.books);\n    this.books$ = this.booksSubject.asObservable();\n  }\n  getBooks() {\n    this.booksSubject.next(this.books);\n  }\n  sortByAuthor() {\n    this.books.sort((a, b) => a.author.localeCompare(b.author));\n    this.booksSubject.next(this.books);\n  }\n  sortByTitle() {\n    this.books.sort((a, b) => a.title.localeCompare(b.title));\n    this.booksSubject.next(this.books);\n  }\n  sortByYear() {\n    this.books = this.books.sort((a, b) => a.year - b.year);\n    this.booksSubject.next(this.books);\n  }\n  sortByYearBackwards() {\n    this.books = this.books.sort((a, b) => b.year - a.year);\n    this.booksSubject.next(this.books);\n  }\n  sortByCost() {\n    this.books = this.books.sort((a, b) => a.cost - b.cost);\n    this.booksSubject.next(this.books);\n  }\n  sortByCostBackwards() {\n    this.books = this.books.sort((a, b) => b.cost - a.cost);\n    this.booksSubject.next(this.books);\n  }\n  sortByRating() {\n    this.books = this.books.sort((a, b) => a.rating - b.rating);\n    this.booksSubject.next(this.books);\n  }\n  sortByRatingBackards() {\n    this.books = this.books.sort((a, b) => b.rating - a.rating);\n    this.booksSubject.next(this.books);\n  }\n}\n_class = BookService;\n_class.ɵfac = function BookService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BOOKS","BehaviorSubject","BookService","constructor","books","booksSubject","books$","asObservable","getBooks","next","sortByAuthor","sort","a","b","author","localeCompare","sortByTitle","title","sortByYear","year","sortByYearBackwards","sortByCost","cost","sortByCostBackwards","sortByRating","rating","sortByRatingBackards","factory","ɵfac","providedIn"],"sources":["/Users/adminisztrator/Repo/Angular/book-list/src/app/book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from './book.model';\nimport { BOOKS } from './books.data';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookService {\n  private books: Book[] = BOOKS;\n\n  private booksSubject: BehaviorSubject<Book[]> = new BehaviorSubject<Book[]>(\n    this.books\n  );\n\n  books$ = this.booksSubject.asObservable();\n\n  getBooks(): void {\n    this.booksSubject.next(this.books);\n  }\n\n  sortByAuthor(): void {\n    this.books.sort((a, b) => a.author.localeCompare(b.author));\n    this.booksSubject.next(this.books);\n  }\n  sortByTitle(): void {\n    this.books.sort((a, b) => a.title.localeCompare(b.title));\n    this.booksSubject.next(this.books);\n  }\n  sortByYear(): void {\n    this.books = this.books.sort((a, b) => a.year - b.year);\n    this.booksSubject.next(this.books); \n  }\n  sortByYearBackwards(): void {\n    this.books = this.books.sort((a, b) => b.year - a.year);\n    this.booksSubject.next(this.books); \n  }\n  sortByCost(): void {\n    this.books = this.books.sort((a, b) => a.cost - b.cost);\n    this.booksSubject.next(this.books); \n  }\n  sortByCostBackwards(): void {\n    this.books = this.books.sort((a, b) => b.cost - a.cost);\n    this.booksSubject.next(this.books); \n  }\n  sortByRating(): void {\n    this.books = this.books.sort((a, b) => a.rating - b.rating);\n    this.booksSubject.next(this.books); \n  }\n  sortByRatingBackards(): void {\n    this.books = this.books.sort((a, b) => b.rating - a.rating);\n    this.booksSubject.next(this.books); \n  }\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}